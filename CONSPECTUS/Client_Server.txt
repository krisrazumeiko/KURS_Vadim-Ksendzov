HW
Client_Server
1) Прочитать про клиент-серверную архитектуру
    Клиент-серверная аркхитектура - это такая архитектруа, которая распределяет сетевую нагрузку между клиентом и сервером. 
    В клиент-сервеной архитектуре есть три основных компонента:
    1. Клиент
    2. Сервер
    3. База данных (БД)
    Клиент - это та программа, с которой работает пользователь. Клиент посылает запрос серверу о каких-либо данных.
    Сервер - это cпециальный мощный компьютер, на котором хранится код какого-то приложения, к которому клиент посылает запрос, а сервер отвечает на запрос клиенту.
    База данных - хранилище, где приложение хранит свои данные, к которым обращается сервер.

2) Что такое HTTP и HTTPS
     (Hyper Text Transfer Protocol) - это протокол передачи данных в сети. Используется для получения информации с веб-сайтов. 
     HTTPS (Hyper Text Transfer Protocol Secure) - это расширение протокола HTTP для безопасной передачи данных в сети, которое поддерживает технологию шифрования SSL/TLS.
     SSl - Secure Sockets Layer
     TLS - Transport Layer Security

3) HTTP методы
    Методы, которые используются при формировании HTTP-запросов:
        - get - запрашивает информацию из указанного источника и не влияет на его содержимое. Запрос доступен для кэширования и добавления в заклдаки. Длина запроса ограничена. Максимальная длина url 2048.
        - post - используется для отправки данных, которые могут влиять на содержимое ресурса. Запросы не кэшируются и не добавляются в закладки, не ограничены в объеме.
        - put - загружает содержимое запроса на указанный в запросе url. Если по заданному url ресурса нет, то сервер создает его, возвращая статус 201 (Created)
        - head - аналогичен get, однако в ответе сервера содержится только заголовок, без тела.
        - delete -удаляет указанный ресурс.
        - connect - преобразует соединение запроса в прозрачный TCP/IP-туннель
        - options - используется для описания параметров коммуникации между клиентом и сервером.
        - trace - вызывает возвращаемое текстовое сообщение с ресурса.
        - path - частично изменяет ресурс.

4) HTTP статус коды сервера
    Код ответа (состояния) HTTP показывает, был ли успешно выполнен определённый HTTP запрос. Коды сгруппированы в 5 классов:
        - Информационные 100 - 199
        - Успешные 200 - 299
        - Перенаправления 300 - 399
        - Клиентские ошибки 400 - 499
        - Серверные ошибки 500 - 599

5) Что такое ядро браузера 
    Браузерный движок (англ. layout engine) (или ядро браузера) — представляет собой программу, преобразующую содержимое веб-страниц (файлы HTML, XML, цифровые изображения и т. д.) и информацию о форматировании (в форматах CSS, XSL и т. д.) в интерактивное изображение форматированного содержимого на экране. Браузерный движок обычно используется в веб-браузерах (отсюда название), почтовых клиентах и других программах нуждающихся в отображении и редактировании содержимого веб-страниц.

6) Какие браузеры какие ядра используют
    Основные браузерные движки
        1) Trident — проприетарный движок Microsoft Internet Explorer; используется многими программами для Microsoft Windows (например, мини-браузерами в программах Winamp и RealPlayer).
        2) Gecko — открытый движок проекта Mozilla; используется в большом числе программ, основанных на коде Mozilla (браузере Firefox, почтовом клиенте Thunderbird, наборе программ SeaMonkey).
        3) KHTML — разработан в рамках проекта KDE, используется в браузере Konqueror и послужил основой для WebKit.
        4) WebKit — движок для браузера Apple Safari, включенного в операционную систему Mac OS X, и браузера Google Chrome. Встроен в библиотеку Qt.
        5) Presto — проприетарный движок, разработанный Opera Software; является базой для браузера Opera, а также лицензирован для использования рядом сторонних компаний.

7) Что такое API
    API (Application programming interface) - интерфейс прикладного программирования, набор методов, классов, библиотек, функций, обеспечивающих взаимодействие программ между собой.

8. Что такое ендпоинты
    Эндпоинт (в переводе с англ. — конечная точка) представляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. Простыми словами, это адрес, на который отправляются сообщения (точка касания API сервера).

9) URL (URI, URL, URN)
    URI (Uniform Resource Identifier) – это строка символов, которая используется для идентификации какого-либо ресурса по его адресу или по его имени, либо по тому и тому вместе.

    URL (Uniform Resource Locator) – это строка символов, которая используется для идентификации какого-либо ресурса, но только по его адресу, по его местоположению.

    URN (Uniform Resource Name) – это строка символов, которая используется для идентификации какого-либо ресурса, но только по его имени.

10) Идемпотентные HTTP методы
    Идемпотентные — при повторном выполнении результаты ожидаемо одинаковые. 
    GET, HEAD, PUT, DELETE, OPTIONS, TRACE.

11) Безопасные HTTP методы
    Безопасные — не меняют данные, можно выполнять их в любой последовательности. К ним относятся GET, HEAD и OPTIONS

12) Иденфикация, Аутентификация, Авторизация
    Идентификация — процедура, в результате выполнения которой для субъекта идентификации выявляется его идентификатор, однозначно определяющий этого субъекта в информационной системе.

    Аутентификация — процедура проверки подлинности, например проверка подлинности пользователя путем сравнения введенного им пароля с паролем, сохраненным в базе данных.

    Авторизация — предоставление определенному лицу или группе лиц прав на выполнение определенных действий.

13) Что такое IP
    IP-адрес – это уникальный адрес, идентифицирующий устройство в интернете или локальной сети. IP означает «Интернет-протокол» – набор правил, регулирующих формат данных, отправляемых через интернет или локальную сеть.
    IP-адрес – это строка чисел, разделенных точками. IP-адреса представляют собой набор из четырех чисел, например, 192.158.1.38. Каждое число в этом наборе принадлежит интервалу от 0 до 255. Таким образом, полный диапазон IP-адресации – это адреса от 0.0.0.0 до 255.255.255.255.

14) Что такое октеты в DNS
    Например, IP-адрес в десятичном представлении с точками 192.168.123.132 в двоичном представлении имеет вид 32-битного номера 110000000101000111101110000100. Это число может быть трудно понять, поэтому разделите его на четыре части из восьми двоичных символов.

    Эти 8-битные разделы называются октетами. IP-адрес из этого примера будет иметь вид 11000000.10101000.01111011.10000100. Это число имеет немного больше смысла, поэтому для большинства применений преобразуем двоичный адрес в десятичное представление с точками (192.168.123.132). Десятичные числа, разделенные точками, — это октеты, преобразованные из двоичного представления в десятичное.
    

15) Что такое порт, сколько портов у Linux сервера
    Сетевые порты - это механизм, с помощью которого операционная система определяет какой именно программе необходимо передать сетевой пакет.
    Порты делятся на несколько диапазонов, различающихся назначением в операционной системе:
        - системные порты — 0-1023;
        - пользовательские (зарегистрированные) порты — 1024-49151;
        - частные (динамические) порты — 49152-65535.

16) Уровни OSI
    Всего в модели сетевого взаимодействия выделяют 7 уровней:
    Физический (Physical)
    На самой нижней ступени модели OSI находится физический уровень. Он занимается непосредственно передачей информации. Здесь сигналы (радиосигналы, электрические, оптические) уходят от отправителя к получателю. На текущем уровне речь идёт о кабелях, радиоэфире, кодировании нулей и единиц и др. Сигнал первого уровня – это группа напряжений различной амплитуды, волн либо радиочастот.
    Один из основных стандартов среди технологий физического уровня – Ethernet.

    Канальный уровень (Data Link)
    После получения сигнала с предыдущего физического уровня, на следующем (канальном) уровне происходит проверка и исправление погрешностей передачи. Здесь появляются термины «фрейм» и «MAC-адрес». MAC адреса занимают 48 бит в шестнадцатиричном формате и могут записываться, например, таким образом: 00:26:57:00:1f:02.
    Устройствами второго, канального, уровня считаются мосты и коммутаторы.

    Сетевой уровень (Network)
    Над канальным уровнем находится следующий – сетевой. На этой ступени вводятся понятия «маршрутизация» и «IP-адрес». Для трансформации MAC-адресов в IP применяется протокол ARP.
    Здесь осуществляется маршрутизация трафика. Когда пользователь, к примеру, желает перейти на сайт и вводит его адрес, отправляется DNS-запрос. Ответом на него будет IP-адрес, который подставляется в пакет. Пакет данных – это новый термин, который появляется на 3-м сетевом уровне.
    Устройствами здесь являются роутер или маршрутизатор.

    Транспортный уровень (Transport)
    Здесь происходит доставка информации по каналам внешней сети. Блоки данных в данном случае делятся на отдельные фрагменты, размеры которых будут зависеть от используемого протокола. Для транспортного уровня это TCP и UDP. Какой из них лучше использовать, зависит от типа передаваемых данных.
    TCP (Transmission Control Protocol) – протокол, хорошо подходящий для передачи трафика, для которого любые потери пакетов чувствительны. Процесс передачи контролируется, благодаря чему потерянные пакеты будут обнаружены и запрошены повторно. 
    UDP (User Datagram Protocol) применяется, когда потеря нескольких пакетов не принципиальна. Например, при передаче видео, изображений.

    Сеансовый уровень (Session)
    Сеансовый уровень в ответе за организацию сеансов связи между приложениями на компьютерах. Он отвечает за создание и окончание сеанса, обмен данными, за синхронизацию и другие процессы.
    К протоколам сеансового уровня, например, относятся X.225, ISO 8327, SMPP (через него отправляются СМС сообщения), PAP.

    Уровень представления (Presentation)
    На шестой ступени осуществляется преобразование форматов данных, например, сжатие и кодирование.

    Уровень приложений (Application)
    Верхний уровень модели, где располагаются сетевые службы, с которыми напрямую взаимодействуют пользователи. Данный уровень описывает взаимосвязь приложений на ПК и внешней сети. Сюда относятся протоколы для просмотра страниц в интернете (HTTPS, HTTP), для работы с почтовыми службами (SMTP, POP3), для передачи файлов (FTP, TFTP) и другие.
    Когда осуществляется передача с верхнего на нижний, это именуется инкапсуляцией данных, а в обратном порядке – декапсуляцией.

17) Хедеры http запросов
    Заголовки – это специальные параметры, которые несут определенную служебную информацию о соединении по HTTP. Некоторые заголовки имеют лишь информационный характер для пользователя или для компьютера, другие передают определенные команды, исходя из которых, сервер или клиент будет выполнять какие-то действия.

    В зависимости от того, где эти заголовки могут находиться, они разделяются на:
    
        - General Headers (Основные заголовки) — должны быть и в запросах и в ответах клиента и сервера.

        - Request Headers (Заголовки запроса) — используются только в запросах клиента.

        - Response Headers (Заголовки ответа) — используются только в ответах сервера.

        - Entity Headers (Заголовки сущности) — сопровождают каждую сущность сообщения.